import base64, codecs 
magic = '# -*- coding: utf-8 -*-
import urllib
import urllib2
import re
import os
import xbmcplugin
import xbmcgui
import xbmcaddon
import xbmcvfs
import traceback
import cookielib , base64
import generator
from BeautifulSoup import BeautifulStoneSoup , BeautifulSoup , BeautifulSOAP
oo000 = None
try :
 from xml . sax . saxutils import escape
except : traceback . print_exc ( )
try :
 import json
except :
 import simplejson as json
import SimpleDownloader as downloader
import time
ii = False
oOOo = [ '180upload.com' , 'allmyvideos.net' , 'bestreams.net' , 'clicknupload.com' , 'cloudzilla.to' , 'movshare.net' , 'novamov.com' , 'nowvideo.sx' , 'videoweed.es' , 'daclips.in' , 'datemule.com' , 'fastvideo.in' , 'faststream.in' , 'filehoot.com' , 'filenuke.com' , 'sharesix.com' , 'plus.google.com' , 'picasaweb.google.com' , 'gorillavid.com' , 'gorillavid.in' , 'grifthost.com' , 'hugefiles.net' , 'ipithos.to' , 'ishared.eu' , 'kingfiles.net' , 'mail.ru' , 'my.mail.ru' , 'videoapi.my.mail.ru' , 'mightyupload.com' , 'mooshare.biz' , 'movdivx.com' , 'movpod.net' , 'movpod.in' , 'movreel.com' , 'mrfile.me' , 'nosvideo.com' , 'openload.io' , 'played.to' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'primeshare.tv' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'sharerepo.com' , 'stagevu.com' , 'streamcloud.eu' , 'streamin.to' , 'thefile.me' , 'thevideo.me' , 'tusfiles.net' , 'uploadc.com' , 'zalaa.com' , 'uploadrocket.net' , 'uptobox.com' , 'v-vids.com' , 'veehd.com' , 'vidbull.com' , 'videomega.tv' , 'vidplay.net' , 'vidspot.net' , 'vidto.me' , 'vidzi.tv' , 'vimeo.com' , 'vk.com' , 'vodlocker.com' , 'xfileload.com' , 'xvidstage.com' , 'zettahost.tv' ]
O0 = [ 'plugin.video.dramasonline' , 'plugin.video.f4mTester' , 'plugin.video.shahidmbcnet' , 'plugin.video.SportsDevil' , 'plugin.stream.vaughnlive.tv' , 'plugin.video.ZemTV-shani' ]
if 70 - 70: oo0 . O0OO0O0O - oooo
class iIIii1IIi ( urllib2 . HTTPErrorProcessor ) :
 def http_response ( self , request , response ) :
  return response
 https_response = http_response
 if 73 - 73: II111iiii
def IiII1IiiIiI1 ( url ) :
 xbmc . Player ( ) . play ( "" + url + "" )
 if 40 - 40: oo * OoO0O00
IIiIiII11i = False ;
if IIiIiII11i :
 if 51 - 51: oOo0O0Ooo * I1ii11iIi11i
 if 48 - 48: oO0o / OOooOOo / I11i / Ii1I
 try :
  import pysrc . pydevd as pydevd
  if 48 - 48: iII111i % IiII + I1Ii111 / ooOoO0o * o00O0oo
  pydevd . settrace ( 'localhost' , stdoutToServer = True , stderrToServer = True )
 except ImportError :
  sys . stderr . write ( "Error: " +
 "You must add org.python.pydev.debug.pysrc to your PYTHONPATH." )
  sys . exit ( 1 )
  if 97 - 97: oO0o0ooO0 - IIII / O0oO - IiII
iiI11iii111 = xbmcaddon . Addon ( ) . getAddonInfo ( 'id' )
i1I1Ii1iI1ii = xbmcaddon . Addon ( id = iiI11iii111 )
II1iI = i1I1Ii1iI1ii . getAddonInfo ( 'name' )
i1iIii1Ii1II = i1I1Ii1iI1ii . getAddonInfo ( 'version' )
i1I1Iiii1111 = xbmc . translatePath ( i1I1Ii1iI1ii . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )
i11 = xbmc . translatePath ( i1I1Ii1iI1ii . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
I11 = os . path . join ( i1I1Iiii1111 , 'favorites' )
Oo0o0000o0o0 = os . path . join ( i1I1Iiii1111 , 'history' )
oOo0oooo00o = os . path . join ( i1I1Iiii1111 , 'list_revision' )
oO0o0o0ooO0oO = os . path . join ( i11 , 'icon.png' )
oo0o0O00 = os . path . join ( i11 , 'fanart.jpg' )
oO = os . path . join ( i1I1Iiii1111 , 'source_file' )
i1iiIIiiI111 = i1I1Iiii1111
oooOOOOO = os . path . join ( i1I1Iiii1111 , 'LivewebTV' )
downloader = downloader . SimpleDownloader ( )
i1iiIII111ii = i1I1Ii1iI1ii . getSetting ( 'debug' )
i1iIIi1 = 'https://raw.githubusercontent.com/infosidnei/KODINFONLINE/master/'
ii11iIi1I = i1I1Ii1iI1ii . getSetting ( 'raw' )
iI111I11I1I1 = i1I1Ii1iI1ii . getSetting ( 'debuglevel' )
if 55 - 55: OOooOOo % oo / ooOoO0o - iII111i - O0OO0O0O / OoO0O00
if os . path . exists ( I11 ) == True :
 iii11iII = open ( I11 ) . read ( )
else : iii11iII = [ ]
if os . path . exists ( oO ) == True :
 i1I111I = open ( oO ) . read ( )
else : i1I111I = [ ]
if 1 - 1: oO0o0ooO0 % oO0o * I1Ii111
def OoOo ( string ) :
 if i1iiIII111ii == 'true' :
  xbmc . log ( "[addon Lists-%s]: %s" % ( i1iIii1Ii1II , string ) )
  if 34 - 34: II111iiii + oooo + oo0 - Ii1I + oo0
def ooOoo0O ( ) :
 OooO0 = urllib2 . urlopen ( generator . msg ) . read ( )
 II11iiii1Ii = xbmcaddon . Addon ( ) . getAddonInfo ( 'path' )
 file = os . path . join ( os . path . join ( II11iiii1Ii , '' ) , 'information.txt' )
 OO0o ( '[B][COLOR springgreen]Informações sobre o conteúdo do Addon![/COLOR][/B]' , OooO0 )
 Ooo = open ( file , 'w' )
 Ooo . write ( OooO0 )
 Ooo . close ( )
 if 68 - 68: I1Ii111 + IiII . oooo - oO0o0ooO0 % oooo - O0oO
def oOOO00o ( ) :
 OooO0 = urllib2 . urlopen ( generator . msg ) . read ( )
 if 97 - 97: I1Ii111 % I1Ii111 + OoO0O00 * o00O0oo
def o0o00o0 ( ) :
 if os . path . exists ( I11 ) == True :
  iii11iII = open ( I11 ) . read ( )
  if iii11iII == "[]" :
   os . remove ( I11 )
  else :
   iIi1ii1I1 ( '[COLOR maroon][B]Favoritos: ' + II1iI + '' , 'url' , 4 , oO0o0o0ooO0oO , oo0o0O00 , '' , '' , '' , '' )
 if i1I1Ii1iI1ii . getSetting ( "information" ) == "true" :
  iIi1ii1I1 ( '[COLOR maroon][B]Informação: ' + II1iI + '' , 'url' , 14 , oO0o0o0ooO0oO , oo0o0O00 , '' , '' , '' , '' )
 o0 = json . loads ( open ( oO ) . read ( ) )
 if len ( o0 ) > 1 :
  for I11II1i in o0 :
   if isinstance ( I11II1i , list ) :
    iIi1ii1I1 ( I11II1i [ 0 ] . encode ( 'utf-8' ) , I11II1i [ 1 ] . encode ( 'utf-8' ) , 1 , oO0o0o0ooO0oO , oo0o0O00 , '' , '' , '' , '' , 'source' )
   else :
    IIIII = oO0o0o0ooO0oO
    ooooooO0oo = oo0o0O00
    IIiiiiiiIi1I1 = ''
    I1IIIii = ''
    credits = ''
    oOoOooOo0o0 = ''
    if I11II1i . has_key ( 'thumbnail' ) :
     IIIII = I11II1i [ 'thumbnail' ]
    if I11II1i . has_key ( 'fanart' ) :
     ooooooO0oo = I11II1i [ 'fanart' ]
    if I11II1i . has_key ( 'description' ) :
     IIiiiiiiIi1I1 = I11II1i [ 'description' ]
    if I11II1i . has_key ( 'date' ) :
     I1IIIii = I11II1i [ 'date' ]
    if I11II1i . has_key ( 'genre' ) :
     oOoOooOo0o0 = I11II1i [ 'genre' ]
    if I11II1i . has_key ( 'credits' ) :
     credits = I11II1i [ 'credits' ]
    iIi1ii1I1 ( I11II1i [ 'title' ] . encode ( 'utf-8' ) , I11II1i [ 'url' ] . encode ( 'utf-8' ) , 1 , IIIII , ooooooO0oo , IIiiiiiiIi1I1 , oOoOooOo0o0 , I1IIIii , credits , 'source' )
 else :
  if len ( o0 ) == 1 :
   if isinstance ( o0 [ 0 ] , list ) :
    OOOO ( o0 [ 0 ] [ 1 ] . encode ( 'utf-8' ) , oo0o0O00 )
   else :
    OOOO ( o0 [ 0 ] [ 'url' ] , o0 [ 0 ] [ 'fanart' ] )
    if 87 - 87: iII111i / I1Ii111 - oo * IiII / II111iiii . O0OO0O0O
def iii11I111 ( ) :
 if os . path . exists ( I11 ) == True :
  iii11iII = open ( I11 ) . read ( )
  if iii11iII == "[]" :
   os . remove ( I11 )
  else :
   iIi1ii1I1 ( '[COLOR maroon][B]Favoritos: ' + II1iI + '' , 'url' , 4 , oO0o0o0ooO0oO , oo0o0O00 , '' , '' , '' , '' )
 if i1I1Ii1iI1ii . getSetting ( "information" ) == "true" :
  iIi1ii1I1 ( '[COLOR maroon][B]Informação: ' + II1iI + '' , 'url' , 14 , oO0o0o0ooO0oO , oo0o0O00 , '' , '' , '' , '' )
 if i1I1Ii1iI1ii . getSetting ( 'raw' ) :
  import generator
  OoOo ( "PastebinLinks" )
  OOOO00ooo0Ooo ( i1iIIi1 + base64 . b32decode ( ii11iIi1I + generator . itemList ) , '' )
  return
 else :
  xbmc . executebuiltin ( "XBMC.Notification(" + II1iI + ",Definir senha no primeiro uso deste Addon nas definições!,8000," + oO0o0o0ooO0oO + ")" )
  if 69 - 69: I11i * O0OO0O0O + oO0o . OoO0O00 / O0OO0O0O
def O000oo0O ( url = None ) :
 if url is None :
  if not i1I1Ii1iI1ii . getSetting ( "new_url_source" ) == "" :
   OOOOi11i1 = i1I1Ii1iI1ii . getSetting ( 'new_url_source' ) . decode ( 'utf-8' )
 else :
  OOOOi11i1 = url
 if OOOOi11i1 == '' or OOOOi11i1 is None :
  return
 OoOo ( 'Adding New Source: ' + OOOOi11i1 . encode ( 'utf-8' ) )
 if 29 - 29: Ii1I % oOo0O0Ooo + O0oO / I11i + IiII * I11i
 i1I1iI = None
 if 93 - 93: oooo % iII111i * oo
 Ii11Ii1I = ( OOOOi11i1 )
 print 'source_url' , OOOOi11i1
 if isinstance ( Ii11Ii1I , BeautifulSOAP ) :
  if Ii11Ii1I . find ( 'channels_info' ) :
   i1I1iI = Ii11Ii1I . channels_info
  elif Ii11Ii1I . find ( 'items_info' ) :
   i1I1iI = Ii11Ii1I . items_info
 if i1I1iI :
  O00oO = { }
  O00oO [ 'url' ] = OOOOi11i1
  try : O00oO [ 'title' ] = i1I1iI . title . string
  except : pass
  try : O00oO [ 'thumbnail' ] = i1I1iI . thumbnail . string
  except : pass
  try : O00oO [ 'fanart' ] = i1I1iI . fanart . string
  except : pass
  try : O00oO [ 'genre' ] = i1I1iI . genre . string
  except : pass
  try : O00oO [ 'description' ] = i1I1iI . description . string
  except : pass
  try : O00oO [ 'date' ] = i1I1iI . date . string
  except : pass
  try : O00oO [ 'credits' ] = i1I1iI . credits . string
  except : pass
 else :
  if '/' in OOOOi11i1 :
   I11i1I1I = OOOOi11i1 . split ( '/' ) [ - 1 ] . split ( '.' ) [ 0 ]
  if '\\' in OOOOi11i1 :
   I11i1I1I = OOOOi11i1 . split ( '\\' ) [ - 1 ] . split ( '.' ) [ 0 ]
  if '%' in I11i1I1I :
   I11i1I1I = urllib . unquote_plus ( I11i1I1I )
  oO0Oo = xbmc . Keyboard ( I11i1I1I , 'Dar um nome á lista:' )
  oO0Oo . doModal ( )
  if ( oO0Oo . isConfirmed ( ) == False ) :
   return
  oOOoo0Oo = oO0Oo . getText ( )
  if len ( oOOoo0Oo ) == 0 :
   return
  O00oO = { }
  O00oO [ 'title' ] = oOOoo0Oo
  O00oO [ 'url' ] = OOOOi11i1
  O00oO [ 'fanart' ] = ooooooO0oo
  if 78 - 78: I1Ii111
 if os . path . exists ( oO ) == False :
  OO00Oo = [ ]
  OO00Oo . append ( O00oO )
  Ooo = open ( oO , "w" )
  Ooo . write ( json . dumps ( OO00Oo ) )
  Ooo . close ( )
 else :
  o0 = json . loads ( open ( oO , "r" ) . read ( ) )
  o0 . append ( O00oO )
  Ooo = open ( oO , "w" )
  Ooo . write ( json . dumps ( o0 ) )
  Ooo . close ( )
 i1I1Ii1iI1ii . setSetting ( 'new_url_source' , "" )
 xbmc . executebuiltin ( "XBMC.Notification(" + II1iI + ",New source added.,5000," + oO0o0o0ooO0oO + ")" )
 if not url is None :
  if 'xbmcplus.xb.funpic.de' in url :
   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=14,replace)" % sys . argv [ 0 ] )
  elif 'community-links' in url :
   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=10,replace)" % sys . argv [ 0 ] )
 else : i1I1Ii1iI1ii . openSettings ( )
 if 51 - 51: oO0o0ooO0 * I11i + I1Ii111 + oO0o
def o0O0O00 ( name ) :
 o0 = json . loads ( open ( oO , "r" ) . read ( ) )
 for o000o in range ( len ( o0 ) ) :
  if isinstance ( o0 [ o000o ] , list ) :
   if o0 [ o000o ] [ 0 ] == name :
    del o0 [ o000o ]
    Ooo = open ( oO , "w" )
    Ooo . write ( json . dumps ( o0 ) )
    Ooo . close ( )
    break
  else :
   if o0 [ o000o ] [ 'title' ] == name :
    del o0 [ o000o ]
    Ooo = open ( oO , "w" )
    Ooo . write ( json . dumps ( o0 ) )
    Ooo . close ( )
    break
 xbmc . executebuiltin ( "XBMC.Container.Refresh" )
 xbmc . executebuiltin ( "XBMC.Notification(" + II1iI + ",Removido da lista!,5000," + oO0o0o0ooO0oO + ")" )
 if 7 - 7: O0oO * oO0o % iII111i . oO0o0ooO0
def OOOO ( url , fanart , data = None ) :
 Ii1iIiII1ii1 = ooOooo000oOO ( url , data )
 if 59 - 59: OoO0O00 + II111iiii * OOooOOo + oo
 if isinstance ( Ii1iIiII1ii1 , BeautifulSOAP ) :
  if 58 - 58: OoO0O00 * IiII * Ii1I / IiII
  if len ( Ii1iIiII1ii1 ( 'channels' ) ) > 0 and i1I1Ii1iI1ii . getSetting ( 'donotshowbychannels' ) == 'false' :
   oO0o0OOOO = Ii1iIiII1ii1 ( 'channel' )
   for O0O0OoOO0 in oO0o0OOOO :
    if 10 - 10: II111iiii % oooo
    if 54 - 54: IIII - OoO0O00 % OOooOOo % I1Ii111 % oooo + O0oO
    I1111I1iII11 = ''
    Oooo0O0oo00oO = 0
    try :
     I1111I1iII11 = O0O0OoOO0 ( 'externallink' ) [ 0 ] . string
     Oooo0O0oo00oO = len ( O0O0OoOO0 ( 'externallink' ) )
    except : pass
    if 14 - 14: OOooOOo / oO0o0ooO0 . OOooOOo . I1Ii111 % oO0o * I1Ii111
    if Oooo0O0oo00oO > 1 : I1111I1iII11 = ''
    if 16 - 16: OOooOOo . O0oO + oo0
    i1i1I1IIii1II = O0O0OoOO0 ( 'name' ) [ 0 ] . string
    O0ii1ii1ii = O0O0OoOO0 ( 'thumbnail' ) [ 0 ] . string
    if O0ii1ii1ii == None :
     O0ii1ii1ii = ''
     if 91 - 91: oO0o0ooO0
    try :
     if not O0O0OoOO0 ( 'fanart' ) :
      if i1I1Ii1iI1ii . getSetting ( 'use_thumb' ) == "true" :
       iiIii = O0ii1ii1ii
      else :
       iiIii = fanart
     else :
      iiIii = O0O0OoOO0 ( 'fanart' ) [ 0 ] . string
     if iiIii == None :
      raise
    except :
     iiIii = fanart
     if 79 - 79: II111iiii / O0OO0O0O
    try :
     IIiiiiiiIi1I1 = O0O0OoOO0 ( 'info' ) [ 0 ] . string
     if IIiiiiiiIi1I1 == None :
      raise
    except :
     IIiiiiiiIi1I1 = ''
     if 75 - 75: OOooOOo % I11i % I11i . IIII
    try :
     oOoOooOo0o0 = O0O0OoOO0 ( 'genre' ) [ 0 ] . string
     if oOoOooOo0o0 == None :
      raise
    except :
     oOoOooOo0o0 = ''
     if 5 - 5: I11i * O0oO + OOooOOo . IiII + OOooOOo
    try :
     I1IIIii = O0O0OoOO0 ( 'date' ) [ 0 ] . string
     if I1IIIii == None :
      raise
    except :
     I1IIIii = ''
     if 91 - 91: O0OO0O0O
    try :
     credits = O0O0OoOO0 ( 'credits' ) [ 0 ] . string
     if credits == None :
      raise
    except :
     credits = ''
     if 61 - 61: OoO0O00
    try :
     if I1111I1iII11 == '' :
      iIi1ii1I1 ( i1i1I1IIii1II . encode ( 'utf-8' , 'ignore' ) , url . encode ( 'utf-8' ) , 2 , O0ii1ii1ii , iiIii , IIiiiiiiIi1I1 , oOoOooOo0o0 , I1IIIii , credits , True )
     else :
      if 64 - 64: O0oO / OOooOOo - O0OO0O0O - I1Ii111
      iIi1ii1I1 ( i1i1I1IIii1II . encode ( 'utf-8' ) , I1111I1iII11 . encode ( 'utf-8' ) , 1 , O0ii1ii1ii , iiIii , IIiiiiiiIi1I1 , oOoOooOo0o0 , I1IIIii , None , 'source' )
    except :
     OoOo ( 'There was a problem adding directory from getData(): ' + i1i1I1IIii1II . encode ( 'utf-8' , 'ignore' ) )
  else :
   OoOo ( 'No Channels: getItems' )
   O0oOoOOOoOO ( Ii1iIiII1ii1 ( 'item' ) , fanart )
 else :
  ii1ii11IIIiiI ( Ii1iIiII1ii1 )
  if 67 - 67: I1Ii111 * iII111i * Ii1I + IiII / oo
def OOOO00ooo0Ooo ( url , fanart , data = None ) :
 Ii1iIiII1ii1 = I1I111 ( url , data )
 if 82 - 82: oo0 - o00O0oo * II111iiii / I1Ii111
 if isinstance ( Ii1iIiII1ii1 , BeautifulSOAP ) :
  if 31 - 31: oO0o0ooO0 . oO0o - oooo
  if len ( Ii1iIiII1ii1 ( 'channels' ) ) > 0 and i1I1Ii1iI1ii . getSetting ( 'donotshowbychannels' ) == 'false' :
   oO0o0OOOO = Ii1iIiII1ii1 ( 'channel' )
   for O0O0OoOO0 in oO0o0OOOO :
    if 64 - 64: I1Ii111
    if 22 - 22: I1ii11iIi11i + ooOoO0o % Ii1I
    I1111I1iII11 = ''
    Oooo0O0oo00oO = 0
    try :
     I1111I1iII11 = O0O0OoOO0 ( 'externallink' ) [ 0 ] . string
     Oooo0O0oo00oO = len ( O0O0OoOO0 ( 'externallink' ) )
    except : pass
    if 9 - 9: II111iiii
    if Oooo0O0oo00oO > 1 : I1111I1iII11 = ''
    if 62 - 62: IiII / oO0o + ooOoO0o / oO0o . OoO0O00
    i1i1I1IIii1II = O0O0OoOO0 ( 'name' ) [ 0 ] . string
    O0ii1ii1ii = O0O0OoOO0 ( 'thumbnail' ) [ 0 ] . string
    if O0ii1ii1ii == None :
     O0ii1ii1ii = ''
     if 68 - 68: oo0 % Ii1I + oo0
    try :
     if not O0O0OoOO0 ( 'fanart' ) :
      if i1I1Ii1iI1ii . getSetting ( 'use_thumb' ) == "true" :
       iiIii = O0ii1ii1ii
      else :
       iiIii = fanart
     else :
      iiIii = O0O0OoOO0 ( 'fanart' ) [ 0 ] . string
     if iiIii == None :
      raise
    except :
     iiIii = fanart
     if 31 - 31: OoO0O00 . oOo0O0Ooo
    try :
     IIiiiiiiIi1I1 = O0O0OoOO0 ( 'info' ) [ 0 ] . string
     if IIiiiiiiIi1I1 == None :
      raise
    except :
     IIiiiiiiIi1I1 = ''
     if 1 - 1: I1ii11iIi11i / I11i % o00O0oo * oO0o0ooO0 . oo0
    try :
     oOoOooOo0o0 = O0O0OoOO0 ( 'genre' ) [ 0 ] . string
     if oOoOooOo0o0 == None :
      raise
    except :
     oOoOooOo0o0 = ''
     if 2 - 2: Ii1I * I1Ii111 - oooo + oOo0O0Ooo . iII111i % o00O0oo
    try :
     I1IIIii = O0O0OoOO0 ( 'date' ) [ 0 ] . string
     if I1IIIii == None :
      raise
    except :
     I1IIIii = ''
     if 92 - 92: o00O0oo
    try :
     credits = O0O0OoOO0 ( 'credits' ) [ 0 ] . string
     if credits == None :
      raise
    except :
     credits = ''
     if 25 - 25: I1ii11iIi11i - oOo0O0Ooo / II111iiii / I11i
    try :
     if I1111I1iII11 == '' :
      iIi1ii1I1 ( i1i1I1IIii1II . encode ( 'utf-8' , 'ignore' ) , url . encode ( 'utf-8' ) , 20 , O0ii1ii1ii , iiIii , IIiiiiiiIi1I1 , oOoOooOo0o0 , I1IIIii , credits , True )
     else :
      if 12 - 12: oOo0O0Ooo * o00O0oo % oo % oooo
      iIi1ii1I1 ( i1i1I1IIii1II . encode ( 'utf-8' ) , I1111I1iII11 . encode ( 'utf-8' ) , 11 , O0ii1ii1ii , iiIii , IIiiiiiiIi1I1 , oOoOooOo0o0 , I1IIIii , None , 'source' )
    except :
     OoOo ( 'There was a problem adding directory from getData(): ' + i1i1I1IIii1II . encode ( 'utf-8' , 'ignore' ) )
  else :
   OoOo ( 'No Channels: getItems' )
   O0oOoOOOoOO ( Ii1iIiII1ii1 ( 'item' ) , fanart )
 else :
  ii1ii11IIIiiI ( Ii1iIiII1ii1 )
  if 20 - 20: IiII % ooOoO0o / ooOoO0o + ooOoO0o
  if 45 - 45: iII111i - oO0o0ooO0 - II111iiii - oO0o . OoO0O00 / O0OO0O0O
def ii1ii11IIIiiI ( data ) :
 oo0o00O = data . rstrip ( )
 o00O0OoO = re . compile ( r'#EXTINF:(.+?),(.*?)[\n\r]+([^\r\n]+)' ) . findall ( oo0o00O )
 i1I = len ( o00O0OoO )
 print 'tsdownloader' , ii
 if 72 - 72: oo / oO0o + II111iiii - I1ii11iIi11i
 for iI1Iii , oO00OOoO00 , IiI111111IIII in o00O0OoO :
  if 37 - 37: IIII / OOooOOo
  if 'tvg-logo' in iI1Iii :
   O0ii1ii1ii = i1 ( iI1Iii , 'tvg-logo=[\'"](.*?)[\'"]' )
   if O0ii1ii1ii :
    if O0ii1ii1ii . startswith ( 'http' ) :
     O0ii1ii1ii = O0ii1ii1ii
     if 11 - 11: oO0o0ooO0 * oOo0O0Ooo . oooo % II111iiii + o00O0oo
    elif not i1I1Ii1iI1ii . getSetting ( 'logo-folderPath' ) == "" :
     OOO = i1I1Ii1iI1ii . getSetting ( 'logo-folderPath' )
     O0ii1ii1ii = OOO + O0ii1ii1ii
     if 68 - 68: OoO0O00 + I1Ii111
    else :
     O0ii1ii1ii = O0ii1ii1ii
     if 45 - 45: o00O0oo / o00O0oo + IIII + O0oO
     if 47 - 47: I11i + O0oO
  else :
   O0ii1ii1ii = ''
   if 82 - 82: OoO0O00 . oO0o0ooO0 - oooo - oO0o0ooO0 * OoO0O00
  if 'type' in iI1Iii :
   ooO0oOOooOo0 = i1 ( iI1Iii , 'type=[\'"](.*?)[\'"]' )
   if ooO0oOOooOo0 == 'yt-dl' :
    IiI111111IIII = IiI111111IIII + "&mode=18"
   elif ooO0oOOooOo0 == 'regex' :
    i1I1ii11i1Iii = IiI111111IIII . split ( '&regexs=' )
    if 26 - 26: I1Ii111 - oooo - oOo0O0Ooo / oO0o . OOooOOo % oooo
    OO = iIiIIi1 ( I1IIII1i ( '' , data = i1I1ii11i1Iii [ 1 ] ) )
    if 2 - 2: I1Ii111 + ooOoO0o - oOo0O0Ooo % I11i . o00O0oo
    I1I1i1I ( i1I1ii11i1Iii [ 0 ] , oO00OOoO00 , O0ii1ii1ii , '' , '' , '' , '' , '' , None , OO , i1I )
    continue
   elif ooO0oOOooOo0 == 'ftv' :
    IiI111111IIII = 'plugin://plugin.video.F.T.V/?name=' + urllib . quote ( oO00OOoO00 ) + '&url=' + IiI111111IIII + '&mode=125&ch_fanart=na'
  elif ii and '.ts' in IiI111111IIII :
   IiI111111IIII = 'plugin://plugin.video.f4mTester/?url=' + urllib . quote_plus ( IiI111111IIII ) + '&amp;streamtype=TSDOWNLOADER&name=' + urllib . quote ( oO00OOoO00 )
  I1I1i1I ( IiI111111IIII , oO00OOoO00 , O0ii1ii1ii , '' , '' , '' , '' , '' , None , '' , i1I )
  if 30 - 30: II111iiii
def I1Ii1iI1 ( name , url , fanart ) :
 Ii1iIiII1ii1 = I1IIII1i ( url )
 oO0 = Ii1iIiII1ii1 . find ( 'channel' , attrs = { 'name' : name . decode ( 'utf-8' ) } )
 O0OO0O = oO0 ( 'item' )
 try :
  iiIii = oO0 ( 'fanart' ) [ 0 ] . string
  if iiIii == None :
   raise
 except :
  iiIii = fanart
 for O0O0OoOO0 in oO0 ( 'subchannel' ) :
  name = O0O0OoOO0 ( 'name' ) [ 0 ] . string
  try :
   O0ii1ii1ii = O0O0OoOO0 ( 'thumbnail' ) [ 0 ] . string
   if O0ii1ii1ii == None :
    raise
  except :
   O0ii1ii1ii = ''
  try :
   if not O0O0OoOO0 ( 'fanart' ) :
    if i1I1Ii1iI1ii . getSetting ( 'use_thumb' ) == "true" :
     iiIii = O0ii1ii1ii
   else :
    iiIii = O0O0OoOO0 ( 'fanart' ) [ 0 ] . string
   if iiIii == None :
    raise
  except :
   pass
  try :
   IIiiiiiiIi1I1 = O0O0OoOO0 ( 'info' ) [ 0 ] . string
   if IIiiiiiiIi1I1 == None :
    raise
  except :
   IIiiiiiiIi1I1 = ''
   if 81 - 81: iII111i . I11i % O0OO0O0O / oOo0O0Ooo - iII111i
  try :
   oOoOooOo0o0 = O0O0OoOO0 ( 'genre' ) [ 0 ] . string
   if oOoOooOo0o0 == None :
    raise
  except :
   oOoOooOo0o0 = ''
   if 43 - 43: oo0 + I1ii11iIi11i * OoO0O00 * IIII * O0OO0O0O
  try :
   I1IIIii = O0O0OoOO0 ( 'date' ) [ 0 ] . string
   if I1IIIii == None :
    raise
  except :
   I1IIIii = ''
   if 64 - 64: IiII % oooo * iII111i
  try :
   credits = O0O0OoOO0 ( 'credits' ) [ 0 ] . string
   if credits == None :
    raise
  except :
   credits = ''
   if 79 - 79: O0OO0O0O
  try :
   iIi1ii1I1 ( name . encode ( 'utf-8' , 'ignore' ) , url . encode ( 'utf-8' ) , 3 , O0ii1ii1ii , iiIii , IIiiiiiiIi1I1 , oOoOooOo0o0 , credits , I1IIIii )
  except :
   OoOo ( 'There was a problem adding directory - ' + name . encode ( 'utf-8' , 'ignore' ) )
 O0oOoOOOoOO ( O0OO0O , iiIii )
 if 78 - 78: Ii1I + IiII - IIII
def IIIIii1I ( text , start_with , end_with ) :
 IiI1i = re . findall ( "(?i)(" + start_with + "[\S\s]+?" + end_with + ")" , text )
 return IiI1i
 if 92 - 92: oO0o0ooO0 . oO0o0ooO0 + oO0o
def IiIiI1111I1I ( name , url , fanart ) :
 Ii1iIiII1ii1 = I1I111 ( url )
 oO0 = Ii1iIiII1ii1 . find ( 'subchannel' , attrs = { 'name' : name . decode ( 'utf-8' ) } )
 O0OO0O = oO0 ( 'subitem' )
 O0oOoOOOoOO ( O0OO0O , fanart )
 if 13 - 13: ooOoO0o . oo0
def O0oOoOOOoOO ( items , fanart , dontLink = False ) :
 i1I = len ( items )
 OoOo ( 'Total Items: %s' % i1I )
 oOOoo00O00o = i1I1Ii1iI1ii . getSetting ( 'add_playlist' )
 O0O00Oo = i1I1Ii1iI1ii . getSetting ( 'ask_playlist_items' )
 oooooo0O000o = i1I1Ii1iI1ii . getSetting ( 'use_thumb' )
 OoO = i1I1Ii1iI1ii . getSetting ( 'parentalblocked' )
 OoO = OoO == "true"
 for ooO0O0O0ooOOO in items :
  oOOo0O00o = False
  iIiIi11 = False
  if 87 - 87: I1ii11iIi11i . oOo0O0Ooo - OoO0O00 + O0OO0O0O / I1ii11iIi11i / iII111i
  IiI = 'false'
  try :
   IiI = ooO0O0O0ooOOO ( 'parentalblock' ) [ 0 ] . string
  except :
   OoOo ( 'parentalblock Error' )
   IiI = ''
  if IiI == 'true' and OoO : continue
  if 32 - 32: I11i + oOo0O0Ooo + IIII . O0oO - oo
  try :
   i1i1I1IIii1II = ooO0O0O0ooOOO ( 'title' ) [ 0 ] . string
   if i1i1I1IIii1II is None :
    i1i1I1IIii1II = 'unknown?'
  except :
   OoOo ( 'Name Error' )
   i1i1I1IIii1II = ''
   if 36 - 36: OOooOOo
   if 89 - 89: I11i + oO0o * I1Ii111 * ooOoO0o
  try :
   if ooO0O0O0ooOOO ( 'epg' ) :
    if ooO0O0O0ooOOO . epg_url :
     OoOo ( 'Get EPG Regex' )
     iiIiI1i1 = ooO0O0O0ooOOO . epg_url . string
     oO0O00oOOoooO = ooO0O0O0ooOOO . epg_regex . string
     IiIi11iI = Oo0O00O000 ( iiIiI1i1 , oO0O00oOOoooO )
     if IiIi11iI :
      i1i1I1IIii1II += ' - ' + IiIi11iI
    elif ooO0O0O0ooOOO ( 'epg' ) [ 0 ] . string > 1 :
     i1i1I1IIii1II += i11I1IiII1i1i ( ooO0O0O0ooOOO ( 'epg' ) [ 0 ] . string )
   else :
    pass
  except :
   OoOo ( 'EPG Error' )
  try :
   i1I1ii11i1Iii = [ ]
   if len ( ooO0O0O0ooOOO ( 'link' ) ) > 0 :
    if 95 - 95: oo0
    if 32 - 32: IiII
    for I11II1i in ooO0O0O0ooOOO ( 'link' ) :
     if not I11II1i . string == None :
      i1I1ii11i1Iii . append ( I11II1i . string )
      if 42 - 42: oO0o0ooO0 * O0OO0O0O % oo . IiII / I11i
   elif len ( ooO0O0O0ooOOO ( 'sportsdevil' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'sportsdevil' ) :
     if not I11II1i . string == None :
      iII11I1IiiIi = 'plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=' + I11II1i . string
      oo0oO = ooO0O0O0ooOOO ( 'referer' ) [ 0 ] . string
      if oo0oO :
       if 94 - 94: oooo / I1ii11iIi11i % o00O0oo * o00O0oo * OoO0O00
       iII11I1IiiIi = iII11I1IiiIi + '%26referer=' + oo0oO
      i1I1ii11i1Iii . append ( iII11I1IiiIi )
   elif len ( ooO0O0O0ooOOO ( 'p2p' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'p2p' ) :
     if not I11II1i . string == None :
      if 'sop://' in I11II1i . string :
       IIiIiI = 'plugin://plugin.video.p2p-streams/?mode=2url=' + I11II1i . string + '&' + 'name=' + i1i1I1IIii1II
       i1I1ii11i1Iii . append ( IIiIiI )
      else :
       OOOIIiI1i1i = 'plugin://plugin.video.p2p-streams/?mode=1&url=' + I11II1i . string + '&' + 'name=' + i1i1I1IIii1II
       i1I1ii11i1Iii . append ( OOOIIiI1i1i )
   elif len ( ooO0O0O0ooOOO ( 'vaughn' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'vaughn' ) :
     if not I11II1i . string == None :
      O00Oo0 = 'plugin://plugin.stream.vaughnlive.tv/?mode=PlayLiveStream&amp;channel=' + I11II1i . string
      i1I1ii11i1Iii . append ( O00Oo0 )
   elif len ( ooO0O0O0ooOOO ( 'ilive' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'ilive' ) :
     if not I11II1i . string == None :
      if not 'http' in I11II1i . string :
       IiII111i1i11 = 'plugin://plugin.video.tbh.ilive/?url=http://www.streamlive.to/view/' + I11II1i . string + '&amp;link=99&amp;mode=iLivePlay'
      else :
       IiII111i1i11 = 'plugin://plugin.video.tbh.ilive/?url=' + I11II1i . string + '&amp;link=99&amp;mode=iLivePlay'
   elif len ( ooO0O0O0ooOOO ( 'yt-dl' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'yt-dl' ) :
     if not I11II1i . string == None :
      i111iIi1i1II1 = I11II1i . string + '&mode=18'
      i1I1ii11i1Iii . append ( i111iIi1i1II1 )
   elif len ( ooO0O0O0ooOOO ( 'dm' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'dm' ) :
     if not I11II1i . string == None :
      oooO = "plugin://plugin.video.dailymotion_com/?mode=playVideo&url=" + I11II1i . string
      i1I1ii11i1Iii . append ( oooO )
   elif len ( ooO0O0O0ooOOO ( 'dmlive' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'dmlive' ) :
     if not I11II1i . string == None :
      oooO = "plugin://plugin.video.dailymotion_com/?mode=playLiveVideo&url=" + I11II1i . string
      i1I1ii11i1Iii . append ( oooO )
      if 26 - 26: ooOoO0o % Ii1I
   elif len ( ooO0O0O0ooOOO ( 'vidatvbn' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'vidatvbn' ) :
     if not I11II1i . string == None :
      o00Oo0oooooo = 'http://www.thenightanimes.net/p//video-mp4.php?v=' + I11II1i . string
      i1I1ii11i1Iii . append ( o00Oo0oooooo )
      if 76 - 76: I1Ii111 / IiII . O0OO0O0O % oOo0O0Ooo . I11i + oO0o0ooO0
   elif len ( ooO0O0O0ooOOO ( 'vidatvb' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'vidatvb' ) :
     if not I11II1i . string == None :
      o0o = 'http://www.branimes.com/video/video-play.mp4/?contentId=' + I11II1i . string
      i1I1ii11i1Iii . append ( o0o )
      if 62 - 62: II111iiii . I1Ii111
   elif len ( ooO0O0O0ooOOO ( 'Link' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'Link' ) :
     if not I11II1i . string == None :
      oOOOoo00 = 'http://twixar.me/' + I11II1i . string
      i1I1ii11i1Iii . append ( oOOOoo00 )
      if 9 - 9: O0OO0O0O % O0OO0O0O - I11i
   elif len ( ooO0O0O0ooOOO ( 'bit' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'bit' ) :
     if not I11II1i . string == None :
      OoOiiI1IIIi = 'https://goo.gl/' + I11II1i . string
      i1I1ii11i1Iii . append ( OoOiiI1IIIi )
      if 47 - 47: I1ii11iIi11i % I1Ii111 % oo0 - O0OO0O0O + O0oO
   elif len ( ooO0O0O0ooOOO ( 'goo' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'goo' ) :
     if not I11II1i . string == None :
      ooO000OO0O00O = 'https://bit.ly/' + I11II1i . string
      i1I1ii11i1Iii . append ( ooO000OO0O00O )
      if 69 - 69: IiII - II111iiii + I11i - I1Ii111
   elif len ( ooO0O0O0ooOOO ( 'vidatvg' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'vidatvg' ) :
     if not I11II1i . string == None :
      iiO0oOo00o = 'plugin://plugin.video.gdrive?mode=streamURL&amp;url=https://docs.google.com/file/d/' + I11II1i . string
      i1I1ii11i1Iii . append ( iiO0oOo00o )
      if 81 - 81: oO0o0ooO0 % oo . oooo
   elif len ( ooO0O0O0ooOOO ( 'playthis' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'playthis' ) :
     if not I11II1i . string == None :
      Ii1Iii1iIi = 'plugin://plugin.video.playthis/?mode=play&player=false&path=' + I11II1i . string
      i1I1ii11i1Iii . append ( Ii1Iii1iIi )
      if 82 - 82: Ii1I / oOo0O0Ooo % oooo / oo - oOo0O0Ooo
   elif len ( ooO0O0O0ooOOO ( 'sony' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'sony' ) :
     if not I11II1i . string == None :
      I1III1111iIi = "" + I11II1i . string + "" '|User-Agent=Mozilla/5.0 (Windows NT 10.0; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0'
      i1I1ii11i1Iii . append ( I1III1111iIi )
      if 38 - 38: o00O0oo + I1Ii111 / IIII % O0oO - Ii1I
   elif len ( ooO0O0O0ooOOO ( 'urlsolve' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'urlsolve' ) :
     if not I11II1i . string == None :
      iI11 = '' + I11II1i . string + ''
      i1I1ii11i1Iii . append ( iI11 )
      if 10 - 10: OoO0O00 / iII111i % II111iiii * I1Ii111 % Ii1I
   elif len ( ooO0O0O0ooOOO ( 'vidaonef' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'vidaonef' ) :
     if not I11II1i . string == None :
      I1i11 = 'plugin://plugin.video.playthis/?mode=play&player=false&path=https://emcc-my.sharepoint.com/:v:/g/personal/vidafilmes_ondrive_pw/' + I11II1i . string + '?download=1&rebase=on'
      i1I1ii11i1Iii . append ( I1i11 )
      if 12 - 12: oo + oo - Ii1I * I1ii11iIi11i % I1ii11iIi11i - OoO0O00
   elif len ( ooO0O0O0ooOOO ( 'vidaones' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'vidaones' ) :
     if not I11II1i . string == None :
      o0O = 'plugin://plugin.video.playthis/?mode=play&player=false&path=https://emcc-my.sharepoint.com/:v:/g/personal/vidaseries_ondrive_pw/' + I11II1i . string + '?download=1&rebase=on'
      i1I1ii11i1Iii . append ( o0O )
      if 84 - 84: oO0o + oo - OoO0O00 . Ii1I * II111iiii + oOo0O0Ooo
   elif len ( ooO0O0O0ooOOO ( 'base64x' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'base64x' ) :
     if not I11II1i . string == None :
      II1i11I = base64 . b64decode ( '' + I11II1i . string + '' )
      i1I1ii11i1Iii . append ( II1i11I )
      if 50 - 50: II111iiii % I1Ii111
   elif len ( ooO0O0O0ooOOO ( 'm3u' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'm3u' ) :
     if not I11II1i . string == None :
      if 49 - 49: iII111i - oo0 . IIII * ooOoO0o % o00O0oo + oo
      oOO0OOOo = "plugin://plugin.video.m3u/?logos=&amp;move=0&amp;mode=3&amp;index=-1&amp;url=" + I11II1i . string
      i1I1ii11i1Iii . append ( oOO0OOOo )
      if 56 - 56: I11i
   elif len ( ooO0O0O0ooOOO ( 'yutube' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'yutube' ) :
     if not I11II1i . string == None :
      if 28 - 28: o00O0oo . o00O0oo % oooo * oooo . I11i / o00O0oo
      iII1i1 = 'plugin://plugin.video.youtube/playlist/' + I11II1i . string + '/'
      i1I1ii11i1Iii . append ( iII1i1 )
      if 85 - 85: ooOoO0o * I1ii11iIi11i . O0OO0O0O - oo0
      if 18 - 18: ooOoO0o + oO0o0ooO0 - O0OO0O0O
      if 53 - 53: oo
   elif len ( ooO0O0O0ooOOO ( 'utube' ) ) > 0 :
    Ooo00Oo = len ( ooO0O0O0ooOOO ( 'utube' ) )
    for I11II1i in ooO0O0O0ooOOO ( 'utube' ) :
     if not I11II1i . string == None :
      if ' ' in I11II1i . string :
       oO00Oooo0O0o0 = 'plugin://plugin.video.youtube/search/?q=' + urllib . quote_plus ( I11II1i . string )
       iIiIi11 = oO00Oooo0O0o0
      elif len ( I11II1i . string ) == 11 :
       oO00Oooo0O0o0 = 'plugin://plugin.video.youtube/play/?video_id=' + I11II1i . string
      elif ( I11II1i . string . startswith ( 'PL' ) and not '&order=' in I11II1i . string ) or I11II1i . string . startswith ( 'UU' ) :
       oO00Oooo0O0o0 = 'plugin://plugin.video.youtube/play/?&order=default&playlist_id=' + I11II1i . string
      elif I11II1i . string . startswith ( 'PL' ) or I11II1i . string . startswith ( 'UU' ) :
       oO00Oooo0O0o0 = 'plugin://plugin.video.youtube/play/?playlist_id=' + I11II1i . string
      elif I11II1i . string . startswith ( 'UC' ) and len ( I11II1i . string ) > 12 :
       oO00Oooo0O0o0 = 'plugin://plugin.video.youtube/channel/' + I11II1i . string + '/'
       iIiIi11 = oO00Oooo0O0o0
       if 14 - 14: I11i % O0OO0O0O * o00O0oo + ooOoO0o + I1ii11iIi11i * ooOoO0o
       if 3 - 3: OOooOOo * I1ii11iIi11i
      elif not I11II1i . string . startswith ( 'UC' ) and not ( I11II1i . string . startswith ( 'PL' ) ) :
       oO00Oooo0O0o0 = 'plugin://plugin.video.youtube/user/' + I11II1i . string + '/'
       iIiIi11 = oO00Oooo0O0o0
     i1I1ii11i1Iii . append ( oO00Oooo0O0o0 )
   elif len ( ooO0O0O0ooOOO ( 'imdb' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'imdb' ) :
     if not I11II1i . string == None :
      if i1I1Ii1iI1ii . getSetting ( 'genesisorpulsar' ) == '0' :
       oOoO00oo0O = 'plugin://plugin.video.genesis/?action=play&imdb=' + I11II1i . string
      else :
       oOoO00oo0O = 'plugin://plugin.video.pulsar/movie/tt' + I11II1i . string + '/play'
      i1I1ii11i1Iii . append ( oOoO00oo0O )
   elif len ( ooO0O0O0ooOOO ( 'f4m' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'f4m' ) :
     if not I11II1i . string == None :
      if '.f4m' in I11II1i . string :
       ooo = 'plugin://plugin.video.f4mTester/?url=' + urllib . quote_plus ( I11II1i . string )
      elif '.m3u8' in I11II1i . string :
       ooo = 'plugin://plugin.video.f4mTester/?url=' + urllib . quote_plus ( I11II1i . string ) + '&amp;streamtype=HLS'
       if 36 - 36: II111iiii . oO0o
      else :
       ooo = 'plugin://plugin.video.f4mTester/?url=' + urllib . quote_plus ( I11II1i . string ) + '&amp;streamtype=SIMPLE'
     i1I1ii11i1Iii . append ( ooo )
   elif len ( ooO0O0O0ooOOO ( 'ftv' ) ) > 0 :
    for I11II1i in ooO0O0O0ooOOO ( 'ftv' ) :
     if not I11II1i . string == None :
      oOIIiIi = 'plugin://plugin.video.F.T.V/?name=' + urllib . quote ( i1i1I1IIii1II ) + '&url=' + I11II1i . string + '&mode=125&ch_fanart=na'
     i1I1ii11i1Iii . append ( oOIIiIi )
   elif len ( ooO0O0O0ooOOO ( 'urlsolve' ) ) > 0 :
    if 91 - 91: Ii1I * I1ii11iIi11i / oOo0O0Ooo . O0OO0O0O + oO0o + OOooOOo
    for I11II1i in ooO0O0O0ooOOO ( 'urlsolve' ) :
     if not I11II1i . string == None :
      iIIi = I11II1i . string + '&mode=19'
      i1I1ii11i1Iii . append ( iIIi )
   if len ( i1I1ii11i1Iii ) < 1 :
    raise
  except :
   OoOo ( 'Error <link> element, Passing:' + i1i1I1IIii1II . encode ( 'utf-8' , 'ignore' ) )
   continue
  try :
   oOOo0O00o = ooO0O0O0ooOOO ( 'externallink' ) [ 0 ] . string
  except : pass
  if 11 - 11: oOo0O0Ooo * iII111i
  if oOOo0O00o :
   o000oo = [ oOOo0O00o ]
   oOOo0O00o = True
  else :
   oOOo0O00o = False
  try :
   iIiIi11 = ooO0O0O0ooOOO ( 'jsonrpc' ) [ 0 ] . string
  except : pass
  if iIiIi11 :
   if 95 - 95: O0oO / O0oO
   o000oo = [ iIiIi11 ]
   if 30 - 30: Ii1I + I1ii11iIi11i / I1ii11iIi11i % Ii1I . Ii1I
   iIiIi11 = True
  else :
   iIiIi11 = False
  try :
   O0ii1ii1ii = ooO0O0O0ooOOO ( 'thumbnail' ) [ 0 ] . string
   if O0ii1ii1ii == None :
    raise
  except :
   O0ii1ii1ii = ''
  try :
   if not ooO0O0O0ooOOO ( 'fanart' ) :
    if i1I1Ii1iI1ii . getSetting ( 'use_thumb' ) == "true" :
     iiIii = O0ii1ii1ii
    else :
     iiIii = fanart
   else :
    iiIii = ooO0O0O0ooOOO ( 'fanart' ) [ 0 ] . string
   if iiIii == None :
    raise
  except :
   iiIii = fanart
  try :
   IIiiiiiiIi1I1 = ooO0O0O0ooOOO ( 'info' ) [ 0 ] . string
   if IIiiiiiiIi1I1 == None :
    raise
  except :
   IIiiiiiiIi1I1 = ''
   if 55 - 55: O0oO - I1Ii111 + OoO0O00 + o00O0oo % ooOoO0o
  try :
   oOoOooOo0o0 = ooO0O0O0ooOOO ( 'genre' ) [ 0 ] . string
   if oOoOooOo0o0 == None :
    raise
  except :
   oOoOooOo0o0 = ''
   if 41 - 41: oo - I1Ii111 - ooOoO0o
  try :
   I1IIIii = ooO0O0O0ooOOO ( 'date' ) [ 0 ] . string
   if I1IIIii == None :
    raise
  except :
   I1IIIii = ''
   if 8 - 8: oO0o + IIII - I11i % I1ii11iIi11i % I11i * iII111i
  OO = None
  if ooO0O0O0ooOOO ( 'regex' ) :
   try :
    IIIi11I11 = ooO0O0O0ooOOO ( 'regex' )
    OO = iIiIIi1 ( IIIi11I11 )
   except :
    pass
  try :
   if 44 - 44: OoO0O00
   if len ( i1I1ii11i1Iii ) > 1 :
    OOOO0OOO = 0
    i1i1ii = [ ]
    iII1ii1 = True if '$$LSPlayOnlyOne$$' in i1I1ii11i1Iii [ 0 ] else False
    if 12 - 12: IiII - O0oO . II111iiii / Ii1I . oo * oO0o
    for I11II1i in i1I1ii11i1Iii :
     if oOOoo00O00o == "false" and not iII1ii1 :
      OOOO0OOO += 1
      I1I1i1I ( I11II1i , '%s) %s' % ( OOOO0OOO , i1i1I1IIii1II . encode ( 'utf-8' , 'ignore' ) ) , O0ii1ii1ii , iiIii , IIiiiiiiIi1I1 , oOoOooOo0o0 , I1IIIii , True , i1i1ii , OO , i1I )
     elif ( oOOoo00O00o == "true" and O0O00Oo == 'true' ) or iII1ii1 :
      if OO :
       i1i1ii . append ( I11II1i + '&regexs=' + OO )
      elif any ( x in I11II1i for x in oOOo ) and I11II1i . startswith ( 'http' ) :
       i1i1ii . append' 
love = '' 
god = '' 
destiny = '' 
joy = '\x72\x6f\x74\x31\x33' 
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29') 
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'','exec'))